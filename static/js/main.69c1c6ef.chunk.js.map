{"version":3,"sources":["App.js","index.js"],"names":["today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","concat","console","log","schema","definitions","person","type","properties","first_name","title","last_name","email","format","order_code","business_unit","main_account","work_order","project_information","description","required","project_feature","enum","enumNames","project_name","date_intake","default","date_start","date_end","client_information","organisation","booking_code","$ref","board_client","main_client","delegated_client_question","dependencies","oneOf","delegated_client","contractor_information","projectmanager","section_projectmanager_question","controller","account","account_holder","teamleader","section_projectmanager","assignment_structure","project_number_available","work_orders","items","work_order_prefix","work_order_name","existing_project_number","estimates","estimate_total_costs","estimate_costs_organisation","estimate_costs_budget_hours","document_capacity_estimate","approved_by_client","approved_by_client_verbally","minimum","maximum","uiSchema","ui:widget","classNames","ui:readonly","ui:order","App","state","formData","handleSubmit","data","_this","setState","submitted","handleChange","newItems","map","Object","objectSpread","update","$set","_this$state","this","content","react_default","a","createElement","main_default","src","lib_default","onChange","onSubmit","onError","bind","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.69c1c6ef.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\n// import update from 'react-addons-update';\nimport update from 'immutability-helper';\nimport Form from \"react-jsonschema-form\";\nimport ReactJson from 'react-json-view'\n\n// import logo from './logo.svg';\nimport './App.css';\n\nconst log = (type) => console.log.bind(console, type);\n  \nlet today = new Date();\nlet dd = today.getDate();\nlet mm = today.getMonth()+1; \nconst yyyy = today.getFullYear();\n\n// Add preleading zeros in dates\nif (dd < 10) {\n    dd = `0${dd}`;\n} \n\nif (mm < 10) {\n    mm=`0${mm}`;\n} \n\ntoday = `${yyyy}-${mm}-${dd}`;\n\nconsole.log(today);\n\nconst schema = {\n  definitions: {\n    person: {\n      type: \"object\",\n      properties: {\n        first_name: {\n          title: \"Voornaam\",\n          type: \"string\"},\n        last_name: {\n          title: \"Achternaam\",\n          type: \"string\"},\n        email: {\n          title: \"E-mail\", \n          type: \"string\",\n          format: \"email\"\n        }\n      }\n    },   \n    order_code: {\n      type: \"object\",\n      properties: {\n        business_unit: {\n          title: \"Bedrijfseenheid\",\n          type: \"string\"},\n        main_account: {\n          title: \"Hoofdrekening\",\n          type: \"string\"},\n        work_order: {\n          title: \"Werkorder\", \n          type: \"string\",\n          format: \"email\"\n        }\n      }\n    }\n  },\n  title: \"Pre-opdrachtfase\",\n  type: \"object\",\n  properties: {\n    project_information: {\n      title: \"Opdracht\",\n      description: \"\",\n      type: \"object\",\n      required: [\n        \"project_name\"\n      ],\n      properties: {\n        project_feature: {\n          title: \"Hoofdtype\",\n          type: \"string\",\n          enum: [\n            \"ADO\",\n            \"BGO\",\n            \"HER\",\n            \"GON\"\n          ],\n          enumNames: [\n            \"Advies en Onderzoek\",\n            \"Beheer en Groot Onderhoud\",\n            \"Herinrichting\",\n            \"Gebiedsontwikkeling en Nieuwbouw\"\n          ]\n        },\n        project_name: {\n          type: \"string\",\n          title: \"Naam opdracht / project\"\n        },\n        date_intake: {\n          title: \"Datum intake\",\n          type: \"string\",\n          format: \"date\",\n          default: today\n        },\n        date_start: {\n          title: \"Startdatum project\",\n          type: \"string\",\n          format: \"date\",\n          default: today\n        },\n        date_end: {\n          title: \"Einddatum project (indicatie)\",\n          type: \"string\",\n          format: \"date\",\n          default: today\n        }\n      }\n    },\n    client_information: {\n      title: \"Opdrachtgever\",\n      description: \"\",\n      type: \"object\",\n      required: [\n        \"main_client\"\n      ],\n      properties: {\n        organisation: {\n          title: \"Organisatie\",\n          type: \"string\",\n          enum: [\n            \"GenO\",\n            \"R&D\",\n            \"SD-C\",\n            \"SD-N\",\n            \"SD-NW\",\n            \"SD-O\",\n            \"SD-W\",\n            \"SD-Z\",\n            \"SD-ZO\",\n            \"V&OR-SB\",\n            \"V&OR-AOG\",\n            \"Other\"\n          ],\n          enumNames: [\n            \"Grond en Ontwikkeling\",\n            \"Ruimte en Duurzaamheid\",\n            \"Stadsdeel Centrum\",\n            \"Stadsdeel Nieuw-West\",\n            \"Stadsdeel Noord\",\n            \"Stadsdeel Oost\",\n            \"Stadsdeel West\",\n            \"Stadsdeel Zuid\",\n            \"Stadsdeel Zuidoost\",\n            \"Verkeer en Openbare Ruimte - Stedelijk Beheer\",\n            \"Verkeer en Openbare Ruimte - Ambtelijk OpdrachtGever\",\n            \"Overig\"\n          ]\n        },\n        booking_code: {\n          title: \"Boekingscombinatie AFS (indien reeds bekend)\",\n          $ref: \"#/definitions/order_code\"\n        },\n        board_client: {\n          title: \"Bestuurlijk\",\n          type: \"object\",\n          properties: {\n            first_name: {\n              title: \"Voornaam\",\n              type: \"string\"},\n            last_name: {\n              title: \"Achternaam\",\n              type: \"string\"}\n          }\n        },\n        main_client: {\n          title: \"Ambtelijk\",\n          $ref: \"#/definitions/person\"\n        },\n        delegated_client_question: {\n          title: \"Gedelegeerd Opdrachtgever\",\n          type: \"string\",\n          enum: [\n            \"Nee\",\n            \"Ja\"\n          ],\n          default: \"Nee\"\n        }\n      },\n      dependencies: {\n        delegated_client_question: {\n          oneOf: [\n            {\n              properties: {\n                delegated_client_question: {\n                  enum: [\n                    \"Nee\"\n                  ]\n                }\n              }\n            },\n            {\n              properties: {\n                delegated_client_question: {\n                  enum: [\n                    \"Ja\"\n                  ]\n                },\n                delegated_client: {\n                  title: \"Gedelegeerd\",\n                  $ref: \"#/definitions/person\"\n                }\n              }\n            }\n          ]\n        }\n      }\n    },\n    contractor_information: {\n      title: \"Opdrachtnemer\",\n      description: \"\",\n      type: \"object\",\n      required: [\n        \"projectmanager\",\n        \"account\"\n      ],\n      properties: {\n        projectmanager: {\n          title: \"Opdrachtverantwoordelijke\",\n          $ref: \"#/definitions/person\"\n        },\n        section_projectmanager_question: {\n          title: \"Deelprojectleider\",\n          type: \"string\",\n          enum: [\n            \"Nee\",\n            \"Ja\"\n          ],\n          default: \"Nee\"\n        },\n        controller: {\n          title: \"Projectbeheerser\",\n          $ref: \"#/definitions/person\"\n        },\n        account: {\n            title: \"Accounthouder/teamleider\",\n            type: \"string\",\n            default: \"account_holder\",\n            enum: [\n              \"account_holder\",\n              \"teamleader\"\n            ],\n            enumNames: [\n              \"Accounthouder\",\n              \"Teamleider\"\n            ]\n        }\n      },\n      dependencies: {\n        account: {\n          oneOf: [\n            {\n              properties: {\n                account: {\n                  enum: [\n                    \"account_holder\"\n                  ]\n                },\n                account_holder: {\n                  title: \"Accounthouder\",\n                  $ref: \"#/definitions/person\"\n                }\n              }\n            },\n            {\n              properties: {\n                account: {\n                  enum: [\n                    \"teamleader\"\n                  ]\n                },\n                teamleader: {\n                  title: \"Teamleider\",\n                  $ref: \"#/definitions/person\"\n                }\n              }\n            }\n          ]\n        },\n        section_projectmanager_question: {\n          oneOf: [\n            {\n              properties: {\n                section_projectmanager_question: {\n                  enum: [\n                    \"Nee\"\n                  ]\n                }\n              }\n            },\n            {\n              properties: {\n                section_projectmanager_question: {\n                  enum: [\n                    \"Ja\"\n                  ]\n                },\n                section_projectmanager: {\n                  title: \"Deelprojectleider\",\n                  $ref: \"#/definitions/person\"\n                }\n              }\n            }\n          ]\n        }\n      }\n    },\n    assignment_structure: {\n      title: \"Opdrachtstructuur Timetell (tijdschrijven)\",\n      description: \"De uren moeten worden verantwoord op één of meerdere werkorders. Elk werkorder valt onder een projectnummer.\",\n      type: \"object\",\n      properties: {\n        project_number_available: {\n          title: \"Bestaand projectnummer\",\n          type: \"string\",\n          enum: [\n            \"Nee\",\n            \"Ja\"\n          ],\n          default: \"Nee\"\n        },\n        work_orders: {\n          title: \"Namen voor werkorder(s)\",\n          type: \"array\",\n          items: {\n            type: \"object\",\n            properties: {\n              work_order_prefix: {\n                title: \"Project\",\n                type: \"string\"\n              },\n              work_order_name: {\n                title: \"Werkordernaam\",\n                type: \"string\"\n              }\n            }\n          }\n        }\n      },\n      dependencies: {\n        project_number_available: {\n          oneOf: [\n            {\n              properties: {\n                project_number_available: {\n                  enum: [\n                    \"Nee\"\n                  ]\n                }\n              }\n            },\n            {\n              properties: {\n                project_number_available: {\n                  enum: [\n                    \"Ja\"\n                  ]\n                },\n                existing_project_number: {\n                  title: \"Hoofdprojectnummer\",\n                  type: \"number\"\n                }\n              }\n            }\n          ]\n        }\n      }\n    },\n    estimates: {\n      title: \"Indicatie projectkosten\",\n      type: \"object\",\n      required: [\"estimate_costs_budget_hours\"],\n      properties: {\n        estimate_total_costs: {\n          title: \"Indicatie totale integrale projectkosten\",\n          description:\"\",\n          type: \"string\",\n          enum: [\n                  0,\n             500000, \n            1500000, \n            5000000\n          ],\n        enumNames: [\n          \"0-500k\", \n          \"500k-1.500k\", \n          \"1500k-5000k\", \n          \">5000k\"\n          ]\n        },\n        estimate_costs_organisation: {\n          title: \"Indicatie totale inzet Ingenieursbureau\",\n          description: \"Als onderdeel van totale integrale projectkosten\",\n          type: \"string\",\n          enum: [\n            0, \n            10000, \n            50000, \n            250000, \n            1000000\n          ],\n        enumNames: [\n          \"0-10k\", \n          \"10-50k\", \n          \"50-250k\", \n          \"250-1000k\", \n          \">1000k\"\n          ]\n        },\n        estimate_costs_budget_hours: {\n          title: \"Kostenindicatie inzet Ingenieursbureau\",\n          description: \"Van \\\"pre-opdracht\\\" tot definitieve opdrachtverstrekking\",\n          type: \"number\"\n        },\n        document_capacity_estimate: {\n          type: \"string\",\n          format: \"data-url\",\n          title: \"Capaciteitsraming\"\n        }\n      },\n      dependencies: {\n        estimate_costs_organisation: {\n          oneOf: [\n            {\n              properties: {\n                estimate_costs_organisation: {\n                  enum: [\n                    10000, \n                    50000, \n                    250000, \n                    1000000\n                  ]\n                },\n                approved_by_client: {\n                  title: \"Akkoord Opdrachtgever\",\n                  type: \"boolean\"\n                }\n              }\n            },\n            {\n              properties: {\n                estimate_costs_organisation: {\n                  enum: [\n                    0\n                  ]\n                },\n                approved_by_client_verbally: {\n                  title: \"Mondeling akkoord Opdrachtgever\",\n                  type: \"boolean\"\n                }\n              }\n            }\n          ]\n        },\n        estimate_costs_budget_hours: {\n            oneOf: [\n                {\n                properties: {\n                  estimate_costs_budget_hours: {\n                    minimum: 0,\n                    maximum: 10000\n                  },\n                  approved_by_client_verbally: {\n                    title: \"Mondeling akkoord Opdrachtgever\",\n                    type: \"boolean\"\n                  }\n                }\n              },\n              {\n                properties: {\n                  estimate_costs_budget_hours: {\n                    minimum: 10001\n                  },\n                  approved_by_client: {\n                    title: \"Akkoord Opdrachtgever\",\n                    type: \"boolean\"\n                  }\n                }\n              }\n            ]\n          }\n      }\n    }\n  }\n}\n\nconst uiSchema = {\n  project_information: {\n    date_start: {\n      \"ui:widget\": \"date\",\n      classNames: \"col_left\"\n    },\n    date_end: {\n      \"ui:widget\": \"date\",\n      classNames: \"col_right\"\n    }\n  },\n  assignment_structure: {\n\n    work_orders: {\n      items: {\n        classNames: \"workorder\",\n        work_order_prefix: {\n          \"ui:readonly\": true,\n          classNames: \"col_left\"\n        },\n        work_order_name: {\n          classNames: \"col_right\"\n        }\n      }\n    }\n  },\n  client_information: {\n    booking_code: {\n      business_unit:{\n        classNames: \"col_3\"\n      },\n      main_account:{\n        classNames: \"col_3\"\n      },\n      work_order:{\n        classNames: \"col_3\"\n      }\n    },\n    board_client: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    main_client: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    delegated_client: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    }\n  },\n  contractor_information: {\n    \"ui:order\":[\n          \"projectmanager\",\n          \"*\",\n          \"section_projectmanager_question\"\n        ]\n    ,\n    projectmanager: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    controller: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    account_holder: {\n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    teamleader: {                 \n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    },\n    section_projectmanager: {            \n      first_name: {\n        classNames: \"col_left\"\n      },\n      last_name: {\n        classNames: \"col_right\"\n      }\n    }\n  }\n};\n\n\nclass App extends Component {\n\n  state = { formData: {} }\n\n  handleSubmit = data => {\n    this.setState({ formData: data.formData, submitted: true })\n  }\n\n  handleChange = data => {  \n    const formData = data.formData\n    // 1. Make a shallow copy of the items\n    let items = formData.assignment_structure.work_orders\n    // Fix undefined error\n    if (items) {\n      // copy object, prevent mutations\n      const project_name = formData.project_information.project_name;\n      const newItems = items.map(work_order => {\n        return {\n          ...work_order,\n          work_order_prefix : project_name\n        }\n      });\n      this.setState({formData: update(formData, {assignment_structure: {work_orders : {$set: newItems}}})});\n    } else {\n      this.setState({ formData: data.formData })\n    }\n  }\n  render () {\n    const { submitted, formData } = this.state;\n\n    const content = submitted\n    ? (<div>\n        <h1>Te versturen informatie:</h1> \n        <ReactJson src={formData} />\n      </div>)\n    : (<Form \n        schema={schema}\n        uiSchema={uiSchema}\n        formData={this.state.formData}\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        onError={log(\"errors\")} />\n      )\n    return(\n      <div>{content}</div>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}